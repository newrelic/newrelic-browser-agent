name: Tests

on:
  # pull_request_target:
  #   types: [labeled]
  workflow_dispatch:

jobs:
  cache-build:
    name: Build - With Cache
    runs-on: ubuntu-latest
    container: node:14
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
  lint:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      

      - name: install
        run: npm ci --cache ./.npm

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      # - name: build
      #   run: npm run build:all

      - name: lint
        run: npm run lint
  package-tests:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm
      # - name: build
      #   run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: test
        run: npm run packages:test
  chrome:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
      BUILD_NUMBER: PR${{ github.event.number }}-unit-${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm
      # - name: build
      #   run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b chrome@* -s -t 85000
  firefox:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
      BUILD_NUMBER: PR${{ github.event.number }}-unit-${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm
      # - name: build
      #   run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b firefox@* -s -t 85000
  safari:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
      BUILD_NUMBER: PR${{ github.event.number }}-unit-${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm
      # - name: build
      #   run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b safari@* -s -t 85000
  edge:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
      BUILD_NUMBER: PR${{ github.event.number }}-unit-${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm
      # - name: build
      #   run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b edge@* -s -t 85000
  android:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
      BUILD_NUMBER: PR${{ github.event.number }}-unit-${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm
      # - name: build
      #   run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b android@* -s -t 85000
  ios:
    runs-on: ubuntu-latest
    container: node:14
    needs: [cache-build]
    # if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    env:
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
      BUILD_NUMBER: PR${{ github.event.number }}-unit-${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install
        run: npm ci --cache ./.npm
      # - name: build
      #   run: npm run build:all
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: run tests
        run: node --max-old-space-size=8192 ./tools/jil/bin/cli.js -f merged -b ios@* -s -t 85000

        
  
        