# This workflow runs jest unit tests with coverage and uploads the coverage
# report to codecov. The coverage report is also archived in the workflow.

name: 'Jest: Unit Tests'

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        description: 'Github branch ref to checkout and run tests on.'
        required: true
        type: string

jobs:
  on_workflow_dispatch:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    name: 'Workflow Dispatch'
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    defaults:
      run:
        shell: bash
    outputs:
      pull-request-target: ${{ steps.pull-request-target.outputs.results }}
    steps:
      - name: Setup container
        run: apt update && apt install -y git
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Find pull request target
        id: pull-request-target
        uses: ./.github/actions/find-pull-request
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  unit:
    name: Run Jest
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: ubuntu:latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Setup container
        run: apt update && apt install -y git
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref || github.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install project dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:coverage
      - uses: codecov/codecov-action@v3
        with:
          override_pr: ${{ fromJSON(needs.find-pull-request.outputs.pull-request-target).number || null }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage/
