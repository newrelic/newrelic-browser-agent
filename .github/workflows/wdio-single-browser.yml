name: 'WDIO: Single browser'

on:
  workflow_dispatch:
    inputs:
      browser-target:
        description: 'Which browser(s) and version(s) to target with the wdio test: chrome@latest OR chrome@* are examples'
        required: true
        type: string
      build-number:
        description: 'Used to associate test results reported to New Relic to the BUILD_NUMBER identifier'
        required: true
        type: string
      additional-flags:
        description: 'Additional flags to pass to the wdio cli'
        required: false
        type: string
      coverage:
        description: 'Enable code coverage'
        required: false
        type: boolean
        default: false
  workflow_call:
    inputs:
      browser-target:
        description: 'Which browser(s) and version(s) to target with the wdio test: chrome@latest OR chrome@* are examples'
        required: true
        type: string
      build-number:
        description: 'Used to associate test results reported to New Relic to the BUILD_NUMBER identifier'
        required: true
        type: string
      additional-flags:
        description: 'Additional flags to pass to the wdio cli'
        required: false
        type: string
      coverage:
        description: 'Enable code coverage'
        required: false
        type: boolean
        default: false
      ref:
        description: 'Github branch ref to checkout and run tests on'
        required: false
        type: string

jobs:
  wdio:
    name: WDIO Test - ${{ inputs.browser-target }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    defaults:
      run:
        shell: bash
    env:
      BUILD_NUMBER: ${{ inputs.build-number }}
      COVERAGE: ${{ inputs.coverage }}
      NEWRELIC_ENVIRONMENT: ci
      JIL_SAUCE_LABS_USERNAME: ${{ secrets.JIL_SAUCE_LABS_USERNAME }}
      JIL_SAUCE_LABS_ACCESS_KEY: ${{ secrets.JIL_SAUCE_LABS_ACCESS_KEY }}
      NEW_RELIC_LICENSE_KEY: ${{ secrets.JIL_NODE_NEW_RELIC_LICENSE_KEY }}
    steps:
      - name: Setup Container
        run: apt update && apt install -y git
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref || github.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Build agent
        run: npm run build:all
      - name: Run WDIO Tests
        run: |
          node ./tools/wdio/bin/cli.js \
            -s \
            -b ${{ inputs.browser-target }} \
            --concurrent 10 \
            ${{ runner.debug && '-v -L -D -d' || '' }} \
            ${{ inputs.coverage && '--coverage' || '' }} \
            ${{ inputs.additional-flags || '' }}
      - name: Find pull request
        id: pull-request-target
        if: ${{ inputs.coverage }}
        uses: ./.github/actions/find-pull-request
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload pr code coverage
        if: ${{ inputs.coverage && steps.pull-request-target.outputs.results }}
        uses: codecov/codecov-action@v3
        env:
          GITHUB_HEAD_REF: ${{ inputs.ref }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          override_pr: ${{ fromJSON(steps.pull-request-target.outputs.results).pr_number }}
          flags: integration-tests
          verbose: true
      - name: Upload branch code coverage
        if: ${{ inputs.coverage && !steps.pull-request-target.outputs.results }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: integration-tests
          verbose: true
      - name: Archive code coverage results
        if: ${{ inputs.coverage }}
        uses: actions/upload-artifact@v3
        with:
          name: integration-code-coverage-report
          path: coverage-e2e/
